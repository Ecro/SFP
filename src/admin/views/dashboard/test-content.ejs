<%- include('../partials/header', { title }) %>
<%- include('../partials/sidebar', { title, activeTab }) %>
<style>
        .sidebar {
            min-height: 100vh;
            background-color: #f8f9fa;
        }
        .nav-link.active {
            background-color: #0d6efd;
            color: white !important;
        }
        .card {
            box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
            border: 1px solid rgba(0, 0, 0, 0.125);
            transition: transform 0.2s, box-shadow 0.2s;
        }
        .card:hover {
            transform: translateY(-2px);
            box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
        }
        .content-idea-card {
            margin-bottom: 1.5rem;
        }
        .storyline-preview {
            font-size: 0.9rem;
            color: #666;
            margin: 0.5rem 0;
        }
        .script-preview {
            font-size: 0.85rem;
            color: #495057;
            background-color: #f8f9fa;
            padding: 0.75rem;
            border-radius: 0.375rem;
            border-left: 3px solid #0d6efd;
            max-height: 100px;
            overflow-y: auto;
        }
        .content-type-badge {
            font-size: 0.75rem;
            padding: 0.25rem 0.5rem;
        }
        .engagement-metrics {
            font-size: 0.8rem;
            color: #6c757d;
        }
        .loading-spinner {
            display: none;
        }
        .results-section {
            display: none;
        }
        .category-input {
            max-width: 300px;
        }
        .test-form {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border-radius: 1rem;
            padding: 2rem;
            margin-bottom: 2rem;
        }
        .btn-go {
            background: linear-gradient(45deg, #28a745, #20c997);
            border: none;
            color: white;
            font-weight: 600;
            padding: 0.5rem 1.5rem;
            border-radius: 0.5rem;
            transition: all 0.3s;
        }
        .btn-go:hover {
            background: linear-gradient(45deg, #218838, #1ea07e);
            color: white;
            transform: scale(1.05);
        }
        .idea-index {
            background: #0d6efd;
            color: white;
            border-radius: 50%;
            width: 30px;
            height: 30px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
            font-size: 0.9rem;
        }
</style>

    <div class="container-fluid">
        <div class="row">
            <!-- Sidebar -->
            <div class="col-md-2 sidebar p-3">
                <h5 class="text-primary mb-4">SFP Admin</h5>
                <nav class="nav flex-column">
                    <a class="nav-link <%= locals.activeTab === 'dashboard' ? 'active' : '' %>" href="/admin">
                        <i class="bi bi-speedometer2 me-2"></i>Dashboard
                    </a>
                    <a class="nav-link <%= locals.activeTab === 'trends' ? 'active' : '' %>" href="/admin/trends">
                        <i class="bi bi-graph-up-arrow me-2"></i>Trends
                    </a>
                    <a class="nav-link <%= locals.activeTab === 'pipeline' ? 'active' : '' %>" href="/admin/pipeline">
                        <i class="bi bi-diagram-3 me-2"></i>Pipeline
                    </a>
                    <a class="nav-link <%= locals.activeTab === 'test-content' ? 'active' : '' %>" href="/admin/test-content">
                        <i class="bi bi-lightbulb me-2"></i>Test Content Ideas
                    </a>
                    <a class="nav-link <%= locals.activeTab === 'analytics' ? 'active' : '' %>" href="/admin/analytics">
                        <i class="bi bi-bar-chart me-2"></i>Analytics
                    </a>
                    <a class="nav-link <%= locals.activeTab === 'logs' ? 'active' : '' %>" href="/admin/logs">
                        <i class="bi bi-file-text me-2"></i>Logs
                    </a>
                    <a class="nav-link <%= locals.activeTab === 'settings' ? 'active' : '' %>" href="/admin/settings">
                        <i class="bi bi-gear me-2"></i>Settings
                    </a>
                </nav>
            </div>

            <!-- Main content -->
            <main class="col-md-10 p-4">
                <div class="d-flex justify-content-between align-items-center mb-4">
                    <h2><i class="bi bi-lightbulb me-2"></i><%= title %></h2>
                    <div class="text-muted small">
                        <i class="bi bi-info-circle me-1"></i>
                        Generate content ideas based on current trends
                    </div>
                </div>

                <!-- Test Form -->
                <div class="test-form">
                    <div class="row align-items-end">
                        <div class="col-md-4">
                            <label for="categoryFilter" class="form-label fw-bold">
                                <i class="bi bi-funnel me-1"></i>Category Filter (Optional)
                            </label>
                            <input type="text" 
                                   class="form-control category-input" 
                                   id="categoryFilter" 
                                   placeholder="e.g., technology, entertainment, lifestyle..."
                                   style="background: rgba(255,255,255,0.1); border: 1px solid rgba(255,255,255,0.3); color: white;"
                                   onkeypress="if(event.key==='Enter') runContentTest()">
                        </div>
                        <div class="col-md-4">
                            <button class="btn btn-light btn-lg fw-bold" onclick="runContentTest()" id="runTestBtn">
                                <i class="bi bi-play-circle me-2"></i>Run Test
                            </button>
                        </div>
                        <div class="col-md-4 text-end">
                            <small class="text-white-50">
                                <i class="bi bi-clock me-1"></i>
                                This will discover current trends and generate 10 content ideas
                            </small>
                        </div>
                    </div>
                </div>

                <!-- Loading State -->
                <div class="loading-spinner text-center py-5" id="loadingSpinner">
                    <div class="spinner-border text-primary" role="status" style="width: 3rem; height: 3rem;">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                    <h4 class="mt-3 text-primary">Discovering Trends & Generating Ideas...</h4>
                    <p class="text-muted">This may take 30-60 seconds</p>
                    <div class="progress mt-3" style="height: 8px; max-width: 400px; margin: 0 auto;">
                        <div class="progress-bar progress-bar-striped progress-bar-animated" 
                             role="progressbar" style="width: 0%" id="progressBar"></div>
                    </div>
                </div>

                <!-- Results Section -->
                <div class="results-section" id="resultsSection">
                    <div class="d-flex justify-content-between align-items-center mb-4">
                        <h3>
                            <i class="bi bi-collection me-2"></i>
                            Content Ideas 
                            <span class="badge bg-success" id="ideasCount">10</span>
                        </h3>
                        <div class="text-muted small">
                            <i class="bi bi-info-circle me-1"></i>
                            Click "Go" on any idea to start full video production
                        </div>
                    </div>

                    <!-- Content Ideas Grid -->
                    <div class="row" id="contentIdeasGrid">
                        <!-- Content ideas will be populated here by JavaScript -->
                    </div>
                </div>

                <!-- Empty State -->
                <div class="text-center py-5" id="emptyState">
                    <i class="bi bi-lightbulb text-muted" style="font-size: 4rem;"></i>
                    <h4 class="mt-3 text-muted">Ready to Generate Content Ideas</h4>
                    <p class="text-muted">
                        Use the form above to discover trending topics and generate engaging video content ideas.
                        <br>Each test will create 10 unique storylines and scripts based on current trends.
                    </p>
                </div>
            </main>
        </div>
    </div>

    <!-- Script Preview Modal -->
    <div class="modal fade" id="scriptModal" tabindex="-1">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="scriptModalTitle">Full Script Preview</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <h6 class="text-muted">Storyline:</h6>
                        <p id="modalStoryline"></p>
                    </div>
                    <div class="mb-3">
                        <h6 class="text-muted">Hook (First 5 seconds):</h6>
                        <div class="script-preview" id="modalHook"></div>
                    </div>
                    <div class="mb-3">
                        <h6 class="text-muted">Full Script:</h6>
                        <div class="script-preview" style="max-height: 300px;" id="modalFullScript"></div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <small class="text-muted">
                                <strong>Estimated Duration:</strong> <span id="modalDuration"></span>s
                            </small>
                        </div>
                        <div class="col-md-6">
                            <small class="text-muted">
                                <strong>Content Type:</strong> <span id="modalContentType"></span>
                            </small>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-success btn-go" onclick="executeContentIdea(currentIdeaId)">
                        <i class="bi bi-play-circle me-1"></i>Execute This Idea
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    
    <script>
        let currentContentIdeas = [];
        let currentIdeaId = null;

        function runContentTest() {
            const category = document.getElementById('categoryFilter').value.trim();
            const loadingSpinner = document.getElementById('loadingSpinner');
            const resultsSection = document.getElementById('resultsSection');
            const emptyState = document.getElementById('emptyState');
            const runTestBtn = document.getElementById('runTestBtn');
            const progressBar = document.getElementById('progressBar');

            // Show loading state
            loadingSpinner.style.display = 'block';
            resultsSection.style.display = 'none';
            emptyState.style.display = 'none';
            runTestBtn.disabled = true;
            runTestBtn.innerHTML = '<i class="bi bi-hourglass-split me-2"></i>Processing...';

            // Simulate progress
            let progress = 0;
            const progressInterval = setInterval(() => {
                progress += Math.random() * 15;
                if (progress > 90) progress = 90;
                progressBar.style.width = progress + '%';
            }, 1000);

            // Make API call
            fetch('/api/test/content-ideas', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ category: category || null })
            })
            .then(response => response.json())
            .then(data => {
                clearInterval(progressInterval);
                progressBar.style.width = '100%';
                
                if (data.success) {
                    currentContentIdeas = data.data.ideas;
                    displayContentIdeas(data.data.ideas);
                    
                    // Show results
                    setTimeout(() => {
                        loadingSpinner.style.display = 'none';
                        resultsSection.style.display = 'block';
                        document.getElementById('ideasCount').textContent = data.data.ideas.length;
                    }, 500);
                } else {
                    throw new Error(data.message || 'Failed to generate content ideas');
                }
            })
            .catch(error => {
                clearInterval(progressInterval);
                console.error('Error:', error);
                alert('Failed to generate content ideas: ' + error.message);
                
                loadingSpinner.style.display = 'none';
                emptyState.style.display = 'block';
            })
            .finally(() => {
                runTestBtn.disabled = false;
                runTestBtn.innerHTML = '<i class="bi bi-play-circle me-2"></i>Run Test';
                progressBar.style.width = '0%';
            });
        }

        function displayContentIdeas(ideas) {
            const grid = document.getElementById('contentIdeasGrid');
            grid.innerHTML = '';

            ideas.forEach((idea, index) => {
                const card = document.createElement('div');
                card.className = 'col-md-6 col-lg-4';
                card.innerHTML = `
                    <div class="card content-idea-card h-100">
                        <div class="card-header d-flex justify-content-between align-items-center">
                            <div class="d-flex align-items-center">
                                <div class="idea-index me-2">${index + 1}</div>
                                <span class="badge content-type-badge bg-${getContentTypeBadgeColor(idea.contentType)}">${idea.contentType}</span>
                            </div>
                            <small class="text-muted">${idea.estimatedDuration}s</small>
                        </div>
                        <div class="card-body d-flex flex-column">
                            <h6 class="card-title">${idea.title}</h6>
                            <div class="storyline-preview">${idea.storyline}</div>
                            <div class="script-preview mb-3">${idea.scriptPreview}...</div>
                            <div class="engagement-metrics mb-3">
                                <small>
                                    <i class="bi bi-eye me-1"></i>Est. Views: ${idea.estimatedViews.toLocaleString()}
                                    <i class="bi bi-graph-up ms-2 me-1"></i>Trend Score: ${idea.trendScore}/100
                                </small>
                            </div>
                            <div class="mt-auto">
                                <div class="d-flex justify-content-between">
                                    <button class="btn btn-outline-primary btn-sm" onclick="showScriptModal(${index})">
                                        <i class="bi bi-eye me-1"></i>Preview
                                    </button>
                                    <button class="btn btn-go btn-sm" onclick="executeContentIdea(${index})">
                                        <i class="bi bi-play-circle me-1"></i>Go
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                `;
                grid.appendChild(card);
            });
        }

        function getContentTypeBadgeColor(contentType) {
            const colors = {
                'educational': 'primary',
                'entertainment': 'success',
                'news': 'danger',
                'lifestyle': 'warning',
                'tutorial': 'info',
                'opinion': 'secondary',
                'reaction': 'dark',
                'comparison': 'light'
            };
            return colors[contentType] || 'secondary';
        }

        function showScriptModal(ideaIndex) {
            const idea = currentContentIdeas[ideaIndex];
            currentIdeaId = ideaIndex;

            document.getElementById('scriptModalTitle').textContent = idea.title;
            document.getElementById('modalStoryline').textContent = idea.storyline;
            document.getElementById('modalHook').textContent = idea.hook;
            document.getElementById('modalFullScript').textContent = idea.fullScript;
            document.getElementById('modalDuration').textContent = idea.estimatedDuration;
            document.getElementById('modalContentType').textContent = idea.contentType;

            const modal = new bootstrap.Modal(document.getElementById('scriptModal'));
            modal.show();
        }

        function executeContentIdea(ideaIndex) {
            const idea = currentContentIdeas[ideaIndex];
            
            if (confirm(`Are you sure you want to execute this content idea?\n\n"${idea.title}"\n\nThis will start the full video production pipeline and may incur API costs.`)) {
                // Show processing state
                const btn = event.target.closest('button');
                const originalHtml = btn.innerHTML;
                btn.disabled = true;
                btn.innerHTML = '<i class="bi bi-hourglass-split me-1"></i>Starting...';

                fetch('/api/content-ideas/execute', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ ideaIndex, idea })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert(`Video production started successfully!\n\nJob ID: ${data.data.jobId}\nTopic: ${data.data.topic}\n\nYou can monitor progress in the Pipeline page.`);
                        
                        // Optionally redirect to pipeline page
                        if (confirm('Would you like to go to the Pipeline page to monitor progress?')) {
                            window.location.href = '/admin/pipeline';
                        }
                    } else {
                        throw new Error(data.message || 'Failed to start video production');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Failed to execute content idea: ' + error.message);
                })
                .finally(() => {
                    btn.disabled = false;
                    btn.innerHTML = originalHtml;
                });
            }
        }

        // Auto-focus on category input when page loads
        document.addEventListener('DOMContentLoaded', function() {
            document.getElementById('categoryFilter').focus();
        });
    </script>
<%- include('../partials/footer') %>
