<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %> - SFP Admin</title>
    
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Bootstrap Icons -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.0/font/bootstrap-icons.css" rel="stylesheet">
    <!-- Chart.js -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    
    <style>
        .sidebar {
            min-height: 100vh;
            background-color: #2c3e50;
        }
        .sidebar .nav-link {
            color: #ecf0f1;
        }
        .sidebar .nav-link:hover {
            color: #3498db;
            background-color: #34495e;
        }
        .sidebar .nav-link.active {
            color: #ffffff;
            background-color: #3498db;
        }
        .status-indicator {
            width: 12px;
            height: 12px;
            border-radius: 50%;
            display: inline-block;
            margin-right: 8px;
        }
        .status-success { background-color: #27ae60; }
        .status-warning { background-color: #f39c12; }
        .status-danger { background-color: #e74c3c; }
        .status-info { background-color: #3498db; }
        
        .log-entry {
            font-family: 'Courier New', monospace;
            font-size: 0.9em;
        }
        
        .metric-card {
            border-left: 4px solid #3498db;
        }
        
        .live-update {
            animation: pulse 2s infinite;
        }
        
        @keyframes pulse {
            0% { opacity: 1; }
            50% { opacity: 0.7; }
            100% { opacity: 1; }
        }
    </style>
</head>
<body>
    <div class="container-fluid">
        <div class="row">
            <!-- Sidebar -->
            <nav class="col-md-3 col-lg-2 d-md-block sidebar collapse">
                <div class="position-sticky pt-3">
                    <div class="text-center mb-4">
                        <h4 class="text-white">SFP Admin</h4>
                        <small class="text-muted">Short-Form Publisher</small>
                    </div>
                    
                    <ul class="nav flex-column">
                        <li class="nav-item">
                            <a class="nav-link <%= locals.activeTab === 'overview' ? 'active' : '' %>" href="/admin">
                                <i class="bi bi-speedometer2"></i> Dashboard
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link <%= locals.activeTab === 'trends' ? 'active' : '' %>" href="/admin/trends">
                                <i class="bi bi-graph-up"></i> Trend Analysis
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link <%= locals.activeTab === 'pipeline' ? 'active' : '' %>" href="/admin/pipeline">
                                <i class="bi bi-diagram-3"></i> Video Pipeline
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link <%= locals.activeTab === 'analytics' ? 'active' : '' %>" href="/admin/analytics">
                                <i class="bi bi-bar-chart"></i> Analytics
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link <%= locals.activeTab === 'logs' ? 'active' : '' %>" href="/admin/logs">
                                <i class="bi bi-file-text"></i> System Logs
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link <%= locals.activeTab === 'settings' ? 'active' : '' %>" href="/admin/settings">
                                <i class="bi bi-gear"></i> Settings
                            </a>
                        </li>
                    </ul>
                    
                    <hr class="my-3">
                    
                    <!-- Quick Actions -->
                    <div class="px-3">
                        <h6 class="text-white-50 mb-2">Quick Actions</h6>
                        <button class="btn btn-sm btn-outline-light mb-2 w-100" onclick="triggerTrendDiscovery()">
                            <i class="bi bi-play-circle"></i> Run Trends
                        </button>
                        <button class="btn btn-sm btn-outline-light mb-2 w-100" onclick="refreshData()">
                            <i class="bi bi-arrow-clockwise"></i> Refresh
                        </button>
                    </div>
                    
                    <!-- Connection Status -->
                    <div class="px-3 mt-4">
                        <div class="d-flex align-items-center">
                            <span class="status-indicator" id="connectionStatus"></span>
                            <small class="text-white-50">Connection</small>
                        </div>
                    </div>
                </div>
            </nav>

            <!-- Main content -->
            <main class="col-md-9 ms-sm-auto col-lg-10 px-md-4">
                <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
                    <h1 class="h2"><%= title %></h1>
                    <div class="btn-toolbar mb-2 mb-md-0">
                        <div class="btn-group me-2">
                            <button type="button" class="btn btn-sm btn-outline-secondary" onclick="window.location.reload()">
                                <i class="bi bi-arrow-clockwise"></i> Refresh
                            </button>
                        </div>
                        <div class="text-muted small">
                            Last updated: <span id="lastUpdated"><%= new Date().toLocaleString() %></span>
                        </div>
                    </div>
                </div>

                <!-- Main content area -->
                <%- body %>
            </main>
        </div>
    </div>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    
    <!-- WebSocket connection for real-time updates -->
    <script>
        let ws;
        let connectionStatus = document.getElementById('connectionStatus');
        
        function connectWebSocket() {
            const protocol = window.location.protocol === 'https:' ? 'wss:' : 'ws:';
            ws = new WebSocket(`${protocol}//${window.location.host}`);
            
            ws.onopen = function() {
                console.log('WebSocket connected');
                connectionStatus.className = 'status-indicator status-success';
            };
            
            ws.onmessage = function(event) {
                const data = JSON.parse(event.data);
                handleWebSocketMessage(data);
            };
            
            ws.onclose = function() {
                console.log('WebSocket disconnected');
                connectionStatus.className = 'status-indicator status-danger';
                // Reconnect after 5 seconds
                setTimeout(connectWebSocket, 5000);
            };
            
            ws.onerror = function(error) {
                console.error('WebSocket error:', error);
                connectionStatus.className = 'status-indicator status-warning';
            };
        }
        
        function handleWebSocketMessage(data) {
            switch(data.type) {
                case 'status':
                    updateLastUpdated();
                    break;
                case 'trend_discovery_result':
                    showNotification('Trend discovery completed', 'success');
                    setTimeout(() => window.location.reload(), 2000);
                    break;
                case 'error':
                    showNotification(data.data.message, 'error');
                    break;
            }
        }
        
        function triggerTrendDiscovery() {
            if (ws && ws.readyState === WebSocket.OPEN) {
                ws.send(JSON.stringify({ type: 'trigger_trend_discovery' }));
                showNotification('Trend discovery started...', 'info');
            } else {
                // Fallback to HTTP API
                fetch('/api/trigger/trends', { method: 'POST' })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            showNotification('Trend discovery completed', 'success');
                            setTimeout(() => window.location.reload(), 2000);
                        } else {
                            showNotification(data.message, 'error');
                        }
                    })
                    .catch(error => {
                        showNotification('Failed to trigger trend discovery', 'error');
                    });
            }
        }
        
        function refreshData() {
            window.location.reload();
        }
        
        function updateLastUpdated() {
            document.getElementById('lastUpdated').textContent = new Date().toLocaleString();
        }
        
        function showNotification(message, type) {
            const alertClass = type === 'success' ? 'alert-success' : 
                             type === 'error' ? 'alert-danger' : 'alert-info';
            
            const notification = document.createElement('div');
            notification.className = `alert ${alertClass} alert-dismissible fade show position-fixed`;
            notification.style.top = '20px';
            notification.style.right = '20px';
            notification.style.zIndex = '9999';
            notification.innerHTML = `
                ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            `;
            
            document.body.appendChild(notification);
            
            // Auto-remove after 5 seconds
            setTimeout(() => {
                if (notification.parentNode) {
                    notification.parentNode.removeChild(notification);
                }
            }, 5000);
        }
        
        // Initialize WebSocket connection
        document.addEventListener('DOMContentLoaded', function() {
            connectWebSocket();
        });
    </script>
</body>
</html>